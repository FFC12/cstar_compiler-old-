translation_unit  :== 
                  | storage_specifier reference_decl
                  | proto_decl 
                  | attrib_decl 
                  | macro_decl
                  | package

reference_decl    :==    
                    type_qualifier var_decl 
                  | func_decl 


var_decl          :==
                    type_resolver var_decl ';' 
                    IDENT ',' var_decl
                  | IDENT '=' initializer ',' var_decl
                  | IDENT
                  | IDENT '=' initializer 


type_resolver     :== 
                    type 
                

type              :==
                    {ANY_TYPE}
                  | {ANY_TYPE} pointer_type
                

storage_specifier :== 		 
                    STATIC
                  | IMPORT
                  | EXPORT

pointer_type      :==
                    *
                  | ^

type_qualifier    :==
                    CONSTPTR
                  | CONST
                  | READONLY                  


initializer       :== 
                    initializer_list
                  | expression   


initializer_list  :==
                  | '{' expression '}'      


expression        :==
                    binop_expr
                  | unary_expr


binop_expr        :== 
                    expression binary_operator expression

unary_expr        :==
                    unary_operator expression


binary_operator   :==
                    '+'
                  | '-'
                  | '&'
                  | ...

unary_operator    :==
                    '++'
                  | '--'
                  | '!'
                  | 'sizeof' ['<' '>' '(' ')']
                  | ...

package           :== 
                    PACKAGE
                  | PACKAGE INVOLVED
                  

      

